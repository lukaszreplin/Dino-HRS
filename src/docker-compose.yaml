services:
  api-gateway:
    build:
      context: .
      dockerfile: ./Dino.Gateway/Dockerfile
    ports:
      - "8081:8081"
      - "8080:8080"
    volumes:
      - ./Dino.Gateway/ocelot.json:/app/ocelot.json
    depends_on:
      - payments-service
      - rooms-service
      - reservations-service
    networks:
      - dino-network

  payments-service:
    build:
      context: .
      dockerfile: ./Services/PaymentsService/Dino.PaymentsService.Api/Dockerfile
    environment:
      - MONGO_CONNECTION=mongodb://mongodb:27017/hotel
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - mongodb
    networks:
      - dino-network

  reservations-service:
    build:
      context: .
      dockerfile: ./Services/ReservationsService/Dino.ReservationsService.Api/Dockerfile
    environment:
      - DB_CONNECTION=Host=postgres;Database=reservations;Username=postgres;Password=postgres
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - postgres
    networks:
      - dino-network

  rooms-service:
    build:
      context: .
      dockerfile: ./Services/RoomsService/Dino.RoomsService.Api/Dockerfile
    environment:
      - MONGO_CONNECTION=mongodb://mongodb:27017/hotel
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - mongodb
    networks:
      - dino-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - dino-network

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=reservations
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dino-network

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@hotel.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_LISTEN_PORT=80
    ports:
      - "8050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    networks:
      - dino-network

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8051:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    networks:
      - dino-network

  rabbitmq:
    image: rabbitmq:4-management
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_MANAGEMENT_USER=user
      - RABBITMQ_MANAGEMENT_PASSWORD=password
    ports:
      - "5672:5672" 
      - "15672:15672"
    volumes:
      - ./docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - dino-network

volumes:
  mongo-data:
  postgres-data:
  pgadmin-data:
  
networks:
  dino-network:
    driver: bridge